// Language Translations
const translations = {
  en: {
    // Header & Navigation
    appTitle: "üõí Grocery Tracker",
    navDashboard: "üìä Dashboard",
    navQuickAdd: "‚ûï Quick Add",
    navWeekLog: "üìã Week Log",
    navPantry: "ü•´ Pantry",
    navWaste: "üóë Waste Log",
    navAI: "ü§ñ AI Assistant",
    navSettings: "‚öôÔ∏è Settings",
    
    // Dashboard
    quickActions: "üéØ Quick Actions",
    addNewItem: "Add New Item",
    viewPantry: "View Pantry",
    viewExpiring: "View Expiring Items",
    viewResupply: "View Resupply Needs",
    
    // Dashboard - additional
    keyMetrics: "üìä Key Metrics (Last 7 days)",
    toResupply: "üîÑ To Resupply",
    lowStockItems: "Low stock items",
    expiringSoonLabel: "‚ö†Ô∏è Expiring Soon",
    daysRemaining: "‚â§3 days remaining",
    cookingCost: "üç≥ Cooking Cost",
    thisWeek: "‡∏ø this week",
    shoppingTotal: "üõí Shopping Total",
    wasteValue: "üóë Waste Value",
    viewResupplyItems: "View Items to Resupply",
    
    // Messages & Actions
    clickToView: "Click to view items",
    
    // KPIs - complete translations
    totalItems: "Total Items",
    lowStock: "Low Stock",
    expiringSoon: "Expiring Soon",
    totalValue: "Total Value",
    thisWeekSpent: "This Week Spent",
    wasteThisWeek: "Waste This Week",
    items: "items",
    
    // Charts & Sections
    spendingByCategory: "Spending by Category",
    recentActivity: "Recent Activity",
    expiringItems: "Expiring Items",
    resupplyNeeded: "Resupply Needed",
    wasteByCategory: "Waste by Category",
    
    // Actions
    buy: "Buy",
    use: "Use",
    waste: "Waste",
    adjust: "Adjust",
    
    // Quick Add Form
    quickAddTitle: "Quick Add Transaction",
    action: "Action",
    selectAction: "Select action...",
    item: "Item",
    itemPlaceholder: "e.g., Milk, Eggs, Rice...",
    category: "Category",
    selectCategory: "Select category...",
    quantity: "Quantity",
    unit: "Unit",
    price: "Price",
    optional: "optional",
    purchaseDate: "Purchase Date",
    expirationDate: "Expiration Date",
    usedQuantity: "Used Quantity",
    wastedQuantity: "Wasted Quantity",
    wasteReason: "Waste Reason",
    wasteReasonPlaceholder: "e.g., Spoiled, Expired...",
    disposedDate: "Disposed Date",
    adjustmentReason: "Adjustment Reason",
    adjustmentPlaceholder: "e.g., Found extra, Miscounted...",
    submitButton: "Submit",
    
    // Categories
    vegetables: "Vegetables",
    fruits: "Fruits",
    meat: "Meat",
    dairy: "Dairy",
    grains: "Grains",
    snacks: "Snacks",
    beverages: "Beverages",
    condiments: "Condiments",
    other: "Other",
    
    // Units
    kg: "kg",
    g: "g",
    l: "L",
    ml: "ml",
    pcs: "pcs",
    pack: "pack",
    bottle: "bottle",
    can: "can",
    
    // Week Log
    weekLogTitle: "Week Log",
    filterByAction: "Filter by action:",
    all: "All",
    searchPlaceholder: "Search items...",
    noTransactions: "No transactions found",
    totalSpent: "Total Spent",
    totalWaste: "Total Waste",
    
    // Pantry
    pantryTitle: "Pantry Inventory",
    onHand: "On Hand",
    threshold: "Threshold",
    expires: "Expires",
    noPantryItems: "No pantry items found",
    
    // Waste Log
    wasteLogTitle: "Waste Log",
    reason: "Reason",
    disposed: "Disposed",
    noWasteRecords: "No waste records found",
    
    // AI Assistant
    aiTitle: "AI Assistant",
    aiSetupTitle: "Setup OpenAI API Key",
    apiKeyLabel: "OpenAI API Key",
    apiKeyPlaceholder: "Enter your OpenAI API key...",
    saveApiKey: "Save API Key",
    aiGreeting: `üëã **Hello! I'm your Grocery Assistant**

I can help you with:
- **Recipe Ideas** - Suggest dishes based on your pantry items
- **Shopping Lists** - Create lists from your inventory needs
- **Meal Planning** - Plan meals for the week
- **Reduce Waste** - Tips on using items before they expire
- **Answer Questions** - About your pantry, purchases, or waste log

Just type your question or use the quick prompts below! üç≥`,
    typePlaceholder: "Type your message...",
    send: "Send",
    clearChat: "Clear Chat",
    quickPrompts: "Quick Prompts:",
    recipeIdeas: "Recipe Ideas",
    shoppingList: "Shopping List",
    mealPlan: "Meal Plan",
    reduceWaste: "Reduce Waste",
    expiringTips: "Expiring Tips",
    
    // Barcode Scanner
    scanBarcode: "Scan Barcode",
    pointCamera: "üì± Point camera at barcode",
    barcodeDetected: "‚úì Barcode detected",
    productFound: "‚úì Product found",
    cameraAccessDenied: "‚ùå Camera access denied. Please allow camera permissions.",
    cameraNotSupported: "‚ùå Camera not supported on this device",
    barcodeScanned: "‚úì Barcode scanned. Please enter product details.",
    
    // Settings
    settingsTitle: "Settings",
    languageSection: "Language / ‡∏†‡∏≤‡∏©‡∏≤",
    languageLabel: "App Language",
    selectLanguage: "Select language...",
    english: "English",
    thai: "‡πÑ‡∏ó‡∏¢ Thai",
    firebaseSection: "Firebase Sync",
    householdCode: "Household Code",
    householdPlaceholder: "Enter your household code...",
    saveHousehold: "Save Household Code",
    dataSection: "Data Management",
    exportData: "Export Data",
    importData: "Import Data",
    clearAllData: "Clear All Data",
    
    // Messages
    success: "Success",
    error: "Error",
    confirmClear: "Are you sure you want to clear all data? This cannot be undone!",
    confirmClearChat: "Clear chat history?",
    chatCleared: "‚úì Chat cleared",
    apiKeySaved: "‚úì OpenAI API key saved",
    householdSaved: "‚úì Household code saved",
    languageChanged: "‚úì Language changed",
    dataExported: "‚úì Data exported",
    dataImported: "‚úì Data imported",
    allDataCleared: "‚úì All data cleared",
  },
  
  th: {
    // Header & Navigation
    appTitle: "üõí ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ä‡∏≥",
    navDashboard: "üìä ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î",
    navQuickAdd: "‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    navWeekLog: "üìã ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
    navPantry: "ü•´ ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    navWaste: "üóë ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
    navAI: "ü§ñ ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI",
    navSettings: "‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
    
    // Dashboard
    quickActions: "üéØ ‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πà‡∏ß‡∏ô",
    addNewItem: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà",
    viewPantry: "‡∏î‡∏π‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    viewExpiring: "‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    viewResupply: "‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°",
    
    // Dashboard - additional
    keyMetrics: "üìä ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏´‡∏•‡∏±‡∏Å (7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤)",
    toResupply: "üîÑ ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    lowStockItems: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥",
    expiringSoonLabel: "‚ö†Ô∏è ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    daysRemaining: "‚â§3 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
    cookingCost: "üç≥ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    thisWeek: "‡∏ø ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ",
    shoppingTotal: "üõí ‡∏¢‡∏≠‡∏î‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á",
    wasteValue: "üóë ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
    viewResupplyItems: "‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°",
    
    // Messages & Actions
    clickToView: "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    
    // KPIs
    totalItems: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
    lowStock: "‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥",
    expiringSoon: "‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    totalValue: "‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°",
    thisWeekSpent: "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ",
    wasteThisWeek: "‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ",
    items: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    
    // Charts & Sections
    spendingByCategory: "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
    recentActivity: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
    expiringItems: "‡∏Ç‡∏≠‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    resupplyNeeded: "‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    wasteByCategory: "‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
    
    // Actions
    buy: "‡∏ã‡∏∑‡πâ‡∏≠",
    use: "‡πÉ‡∏ä‡πâ",
    waste: "‡∏ó‡∏¥‡πâ‡∏á",
    adjust: "‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á",
    
    // Quick Add Form
    quickAddTitle: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß",
    action: "‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥",
    selectAction: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥...",
    item: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    itemPlaceholder: "‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏° ‡πÑ‡∏Ç‡πà ‡∏Ç‡πâ‡∏≤‡∏ß...",
    category: "‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
    selectCategory: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...",
    quantity: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
    unit: "‡∏´‡∏ô‡πà‡∏ß‡∏¢",
    price: "‡∏£‡∏≤‡∏Ñ‡∏≤",
    optional: "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö",
    purchaseDate: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠",
    expirationDate: "‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    usedQuantity: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ",
    wastedQuantity: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏¥‡πâ‡∏á",
    wasteReason: "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏¥‡πâ‡∏á",
    wasteReasonPlaceholder: "‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢ ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏...",
    disposedDate: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏¥‡πâ‡∏á",
    adjustmentReason: "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á",
    adjustmentPlaceholder: "‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏à‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏ô‡∏±‡∏ö‡∏ú‡∏¥‡∏î...",
    submitButton: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å",
    
    // Categories
    vegetables: "‡∏ú‡∏±‡∏Å",
    fruits: "‡∏ú‡∏•‡πÑ‡∏°‡πâ",
    meat: "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå",
    dairy: "‡∏ô‡∏°‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå",
    grains: "‡∏ò‡∏±‡∏ç‡∏û‡∏∑‡∏ä",
    snacks: "‡∏Ç‡∏ô‡∏°",
    beverages: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
    condiments: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á",
    other: "‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
    
    // Units
    kg: "‡∏Å‡∏Å.",
    g: "‡∏Å‡∏£‡∏±‡∏°",
    l: "‡∏•‡∏¥‡∏ï‡∏£",
    ml: "‡∏°‡∏•.",
    pcs: "‡∏ä‡∏¥‡πâ‡∏ô",
    pack: "‡πÅ‡∏û‡πá‡∏Ñ",
    bottle: "‡∏Ç‡∏ß‡∏î",
    can: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á",
    
    // Week Log
    weekLogTitle: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
    filterByAction: "‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥:",
    all: "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
    searchPlaceholder: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£...",
    noTransactions: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    totalSpent: "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°",
    totalWaste: "‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏£‡∏ß‡∏°",
    
    // Pantry
    pantryTitle: "‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    onHand: "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
    threshold: "‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥",
    expires: "‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    noPantryItems: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á",
    
    // Waste Log
    wasteLogTitle: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
    reason: "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•",
    disposed: "‡∏ó‡∏¥‡πâ‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠",
    noWasteRecords: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
    
    // AI Assistant
    aiTitle: "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI",
    aiSetupTitle: "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ OpenAI API Key",
    apiKeyLabel: "OpenAI API Key",
    apiKeyPlaceholder: "‡πÉ‡∏™‡πà OpenAI API key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...",
    saveApiKey: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å API Key",
    aiGreeting: `üëã **‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡∏ä‡∏≥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì**

‡∏â‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÉ‡∏ô:
- **‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£** - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
- **‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á** - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°
- **‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£** - ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
- **‡∏•‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢** - ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
- **‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°** - ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏•‡∏±‡∏á ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πà‡∏ß‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á! üç≥`,
    typePlaceholder: "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...",
    send: "‡∏™‡πà‡∏á",
    clearChat: "‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó",
    quickPrompts: "‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏î‡πà‡∏ß‡∏ô:",
    recipeIdeas: "‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡πÄ‡∏°‡∏ô‡∏π",
    shoppingList: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠",
    mealPlan: "‡πÅ‡∏ú‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    reduceWaste: "‡∏•‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
    expiringTips: "‡∏Ç‡∏≠‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    
    // Barcode Scanner
    scanBarcode: "‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î",
    pointCamera: "üì± ‡∏ä‡∏µ‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î",
    barcodeDetected: "‚úì ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î",
    productFound: "‚úì ‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    cameraAccessDenied: "‚ùå ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á",
    cameraNotSupported: "‚ùå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á",
    barcodeScanned: "‚úì ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    
    // Settings
    settingsTitle: "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
    languageSection: "Language / ‡∏†‡∏≤‡∏©‡∏≤",
    languageLabel: "‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏≠‡∏õ",
    selectLanguage: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤...",
    english: "English ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
    thai: "‡πÑ‡∏ó‡∏¢ Thai",
    firebaseSection: "‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Firebase",
    householdCode: "‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô",
    householdPlaceholder: "‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...",
    saveHousehold: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô",
    dataSection: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    exportData: "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    importData: "‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    clearAllData: "‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
    
    // Messages
    success: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
    error: "‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
    confirmClear: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ!",
    confirmClearChat: "‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó?",
    chatCleared: "‚úì ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÅ‡∏•‡πâ‡∏ß",
    apiKeySaved: "‚úì ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å API key ‡πÅ‡∏•‡πâ‡∏ß",
    householdSaved: "‚úì ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
    languageChanged: "‚úì ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡πâ‡∏ß",
    dataExported: "‚úì ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß",
    dataImported: "‚úì ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß",
    allDataCleared: "‚úì ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
  }
};

// Get current language from localStorage or default to English
function getCurrentLanguage() {
  return localStorage.getItem('appLanguage') || 'en';
}

// Set language
function setLanguage(lang) {
  localStorage.setItem('appLanguage', lang);
  updateUI();
}

// Get translation
function t(key) {
  const lang = getCurrentLanguage();
  return translations[lang][key] || translations.en[key] || key;
}

// Update all UI text with current language
function updateUI() {
  const lang = getCurrentLanguage();
  
  // Update document language attribute
  document.documentElement.lang = lang;
  
  // Update all elements with data-i18n attribute
  document.querySelectorAll('[data-i18n]').forEach(el => {
    const key = el.getAttribute('data-i18n');
    const translation = translations[lang][key];
    if (translation) {
      // Check if it's a placeholder
      if (el.placeholder !== undefined) {
        el.placeholder = translation;
      } else {
        el.textContent = translation;
      }
    }
  });
  
  // Update select options
  document.querySelectorAll('[data-i18n-options]').forEach(select => {
    Array.from(select.options).forEach(option => {
      const key = option.getAttribute('data-i18n');
      if (key) {
        option.textContent = translations[lang][key];
      }
    });
  });
  
  // Update KPI labels dynamically
  const kpiTranslations = {
    'üîÑ To Resupply': t('toResupply'),
    '‚ö†Ô∏è Expiring Soon': t('expiringSoonLabel'),
    'üç≥ Cooking Cost': t('cookingCost'),
    'üõí Shopping Total': t('shoppingTotal'),
    'üóëÔ∏è Waste Items': t('wasteValue'),
    'Low stock items': t('lowStockItems'),
    '‚â§3 days remaining': t('daysRemaining'),
    '‡∏ø this week': t('thisWeek'),
    'entries': lang === 'th' ? '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£' : 'entries',
    'items': t('items'),
    'Click to view items': t('clickToView'),
    'üìä Key Metrics (Last 7 days)': t('keyMetrics'),
    'Spending by Category': t('spendingByCategory'),
    'Recent Activity': t('recentActivity'),
    'Expiring Items': t('expiringItems'),
    'Resupply Needed': t('resupplyNeeded'),
    'Waste by Category': t('wasteByCategory')
  };
  
  // Apply KPI translations
  document.querySelectorAll('.kpi-label, .kpi-trend, h3').forEach(el => {
    const text = el.textContent.trim();
    if (kpiTranslations[text]) {
      el.textContent = kpiTranslations[text];
    }
  });
  
  // Update title attributes
  document.querySelectorAll('[title]').forEach(el => {
    const title = el.getAttribute('title');
    if (kpiTranslations[title]) {
      el.setAttribute('title', kpiTranslations[title]);
    }
  });
}
